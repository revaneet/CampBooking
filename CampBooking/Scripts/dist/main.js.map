{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/campbooking/auth/auth.guard.ts","./src/app/campbooking/booking-update/booking-update.component.ts","./src/app/campbooking/bookings-manage/bookings-manage.component.ts","./src/app/campbooking/bookings-manage/bookings-manage.component.html","./src/app/campbooking/camp-book/camp-book.component.ts","./src/app/campbooking/camp-book/camp-book.component.html","./src/app/campbooking/camp-invoice/camp-invoice.component.ts","./src/app/campbooking/camp-invoice/camp-invoice.component.html","./src/app/campbooking/camp-new/camp-new.component.ts","./src/app/campbooking/camp-new/camp-new.component.html","./src/app/campbooking/camp-update/camp-update.component.ts","./src/app/campbooking/camp-update/camp-update.component.html","./src/app/campbooking/campbooking-routing.module.ts","./src/app/campbooking/campbooking.module.ts","./src/app/campbooking/camps-manage/camps-manage.component.ts","./src/app/campbooking/camps-manage/camps-manage.component.html","./src/app/campbooking/camps/camps.component.ts","./src/app/campbooking/camps/camps.component.html","./src/app/campbooking/containers/campbooking.component.ts","./src/app/campbooking/containers/campbooking.component.html","./src/app/campbooking/home/home.component.ts","./src/app/campbooking/home/home.component.html","./src/app/campbooking/services/booking.service.ts","./src/app/campbooking/services/camp.service.ts","./src/app/campbooking/services/data.service.ts","./src/app/campbooking/services/user.service.ts","./src/app/campbooking/star-rating/star-rating.component.ts","./src/app/campbooking/star-rating/star-rating.component.html","./src/app/campbooking/user/login/login.component.ts","./src/app/campbooking/user/login/login.component.html","./src/app/campbooking/user/signup/signup.component.ts","./src/app/campbooking/user/signup/signup.component.html","./src/app/campbooking/user/user.component.ts","./src/app/campbooking/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'AngularApp';\n}\n","<app-campbooking></app-campbooking>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CampBookingModule } from './campbooking/campbooking.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CampBookingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      if (localStorage.getItem('userToken') != null)\n      {\n        return true;\n      }\n      this.router.navigate(['/LogIn']);\n      return false;\n\n  }\n\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector : 'app-booking-update',\r\n    templateUrl : './booking-update.component.html',\r\n    styleUrls : ['./booking-update.component.css']\r\n})\r\nexport class BookingUpdateComponent{\r\n\r\n}","import { Component } from '@angular/core';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector : 'app-bookings-manage',\r\n    templateUrl : './bookings-manage.component.html',\r\n    styleUrls : ['./bookings-manage.component.css']\r\n})\r\nexport class BookingsManageComponent{\r\n    constructor(\r\n        private router: Router\r\n    ){}\r\n    onManageClick(bookingId)\r\n    {\r\n        if(bookingId===null || bookingId.length<8)\r\n        {\r\n            alert(\"Enter valid invoice number\");\r\n            this.router.navigate(['/ManageBookings']);\r\n        }\r\n        else{\r\n            this.router.navigate(['/Camps/Invoice',bookingId]);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"tm-page-wrap mx-auto\">\r\n    <section class=\"tm-banner\">\r\n        <div class=\"tm-container-outer tm-banner-bg\">\r\n            <div class=\"container\">\r\n                <div class=\"row tm-banner-row\" id=\"tm-section-search\">\r\n                    <section class=\"p-5 tm-container-outer tm-bg-gray\">            \r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-12 mx-auto tm-about-text-wrap text-center\">                        \r\n                                <h2 class=\"text-uppercase mb-4\">Your <strong>Journey</strong> is our priority</h2>\r\n                                <input class=\"form-control\" placeholder=\"Enter Invoice Number\" type=\"text\" #searchInput>   \r\n                                <a routerLink=\"/Camp\" class=\"text-uppercase btn-primary tm-btn\" (click)=\"onManageClick(searchInput.value)\">Manage Booking</a>                            \r\n                            </div>\r\n                        </div>           \r\n                    </section>                   \r\n                </div> <!-- row -->\r\n                <div class=\"tm-banner-overlay\"></div>\r\n            </div>  <!-- .container -->                   \r\n        </div>     <!-- .tm-container-outer -->                 \r\n    </section>    \r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CampService } from '../services/camp.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Camp } from '../models/camp.interface';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { BookingService } from '../services/booking.service';\r\nimport { Booking } from '../models/booking.interface';\r\nimport { CampFilter } from '../models/campFilter.interface';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-camp-book',\r\n    templateUrl : './camp-book.component.html',\r\n    styleUrls : ['./camp-book.component.css']\r\n})\r\nexport class CampBookComponent implements OnInit{\r\n    campFilter: CampFilter;\r\n\r\n    camp: Camp;\r\n    bookingForm: FormGroup;\r\n    billingAddress: FormControl;\r\n    state: FormControl;\r\n    country: FormControl;\r\n    zipCode: FormControl;\r\n    phoneNumber: FormControl;\r\n    booking: Booking;\r\n    nightStayNumber : number;\r\n    bookingId: string;\r\n\r\n    constructor(\r\n        private bookingService: BookingService,\r\n        private campService: CampService,\r\n        private route: ActivatedRoute,\r\n        private data: DataService,\r\n        private router: Router\r\n    ){\r\n        this.billingAddress = new FormControl('', [Validators.required] );\r\n        this.state = new FormControl('', [Validators.required] );\r\n        this.country = new FormControl('', [Validators.required] );\r\n        this.zipCode = new FormControl('', [Validators.required] );\r\n        this.phoneNumber = new FormControl('', [Validators.required] );\r\n\r\n        this.bookingForm = new FormGroup({\r\n            billingAddress : this.billingAddress,\r\n            state : this.state,\r\n            country : this.country,\r\n            zipCode : this.zipCode,\r\n            phoneNumber : this.phoneNumber\r\n        });\r\n\r\n        \r\n    }\r\n    DaysBetween(StartDate, EndDate) {\r\n        const oneDay = 1000 * 60 * 60 * 24;\r\n\r\n        const start = new Date().setUTCDate(StartDate);\r\n        const end = new Date().setUTCDate(EndDate);\r\n      \r\n     \r\n        return (start - end) / oneDay;\r\n      }\r\n\r\n    async ngOnInit() {\r\n        const campId = this.route.snapshot.paramMap.get('id');\r\n        (await this.campService.getCampById(campId))\r\n            .subscribe((camp: Camp) => {\r\n                this.camp = camp;\r\n        });\r\n        this.campFilter = this.data.campFilter;\r\n        this.nightStayNumber = this.DaysBetween(this.campFilter.CheckInDate, this.campFilter.CheckOutDate);\r\n    }\r\n\r\n    async onFormSubmit()\r\n    {\r\n        this.booking = {\r\n            BillingAddress : this.bookingForm.get('billingAddress').value,\r\n            Country : this.bookingForm.get('country').value,\r\n            State: this.bookingForm.get('state').value,\r\n            CheckInDate: this.campFilter.CheckInDate,\r\n            CheckOutDate: this.campFilter.CheckOutDate,\r\n            PhoneNumber: this.bookingForm.get('phoneNumber').value,\r\n            ZipCode: this.bookingForm.get('zipCode').value,\r\n            CampID: this.camp.ID\r\n        };\r\n        console.log(this.booking);\r\n        (await this.bookingService.postBooking(this.booking))\r\n            .subscribe((bookingId: string) => {\r\n                this.bookingId = bookingId;\r\n                alert(\"Booking Confirmed !\");\r\n                this.router.navigate(['Camps/Invoice',bookingId]);\r\n            });\r\n    }\r\n    transform(base64Image){\r\n        return 'data:image/jpeg;base64,' + base64Image;\r\n    }\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"tm-recommended-place\" >\r\n        <div class=\"tm-recommended-description-box\">\r\n            <form class=\"needs-validation\" novalidate [formGroup]=\"bookingForm\" (ngSubmit)=\"onFormSubmit()\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label for=\"billingAddress\">Billing Address:</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"billingAddress\" formControlName=\"billingAddress\" required>\r\n                  <div class=\"valid-feedback\">Valid</div>\r\n                  <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"state\">State:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"state\" formControlName=\"state\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"country\">Country:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"country\" formControlName=\"country\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"zipCode\">Zip-Code:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"zipCode\" formControlName=\"zipCode\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"phoneNumber\">Phone Number:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"phoneNumber\" formControlName=\"phoneNumber\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-primary\" id=\"btn-primary\">Confirm Booking</button>\r\n                <button type=\"submit\" class=\"btn btn-danger ml-2\" id=\"btn-primary\">Cancel Booking</button>\r\n\r\n              </form>\r\n        </div>\r\n        <div class=\"tm-recommended-price-box\">\r\n            <!-- <div class=\"camp-header\">\r\n                <h2>{{camp.CampName}}</h2>\r\n            </div> -->\r\n            <div >\r\n                <img [src]=\"transform(camp.ImageFile)\" id=\"camp-image\">\r\n            </div>\r\n            <div>\r\n                <div class=\"camp-details\">\r\n                    <h3 class=\"tm-recommended-title\">{{camp.CampName}}</h3>\r\n                    <p class=\"tm-text-highlight\">Max Capacity: {{camp.MaxCapacity}}</p>\r\n                    <p class=\"tm-text-gray\">\r\n                        Total stay: {{nightStayNumber}} Nights\r\n                    </p>   \r\n                </div> \r\n            </div>\r\n        </div>                        \r\n    </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BookingService } from '../services/booking.service';\r\nimport { Booking } from '../models/booking.interface';\r\n\r\n@Component({\r\n    selector : 'app-camp-invoice',\r\n    templateUrl : './camp-invoice.component.html',\r\n    styleUrls : ['./camp-invoice.component.css']\r\n})\r\nexport class CampInvoiceComponent implements OnInit{\r\n    bookingId: string;\r\n    booking: Booking;\r\n    totalNights: number;\r\n    totalAmount: number;\r\n    stars: number[] = [1, 2, 3, 4, 5];\r\n    selectedValue: number;\r\n    \r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private bookingService: BookingService,\r\n        private router:Router\r\n    ){}\r\n\r\n    async ngOnInit(){\r\n        this.bookingId = this.route.snapshot.paramMap.get('bookingId');\r\n        (await this.bookingService.getBookingById(this.bookingId))\r\n            .subscribe( (booking: Booking) =>{\r\n                this.booking = booking;\r\n                this.getNumberofNights();\r\n                this.totalAmount = this.totalNights * this.booking.Camp.RatePerNight;\r\n        }) \r\n        \r\n        console.log(this.booking);      \r\n    }\r\n    checkDates()\r\n    {\r\n        const d = new Date();\r\n        if(new Date(this.booking.CheckInDate)>d && new Date(this.booking.CheckOutDate)>d)\r\n        {\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n    getNumberofNights()\r\n    {\r\n        var date1 = new Date(this.booking.CheckInDate);\r\n        var date2 = new Date(this.booking.CheckOutDate);\r\n        var timeDiff = Math.abs(date2.getTime() - date1.getTime());\r\n        this.totalNights = Math.ceil(timeDiff / (1000 * 3600 * 24));    \r\n\r\n    }\r\n    async onCancelClick()\r\n    {\r\n        (await this.bookingService.deleteBookingById(this.booking.ID))\r\n            .subscribe(()=>{\r\n                alert(\"Booking cancelled successfully !\");\r\n                this.router.navigate(['/Home']);\r\n            })\r\n    }\r\n    onUpdateClick()\r\n    {\r\n\r\n    }\r\n    countStar(star) {\r\n        this.selectedValue = star;\r\n        console.log('Value of star', star);\r\n      }\r\n    \r\n}","<div class=\"main-content\">\r\n    <div class=\"tm-recommended-place\" >\r\n        <div class=\"tm-recommended-description-box\">\r\n            <div class=\"invoice-header\">\r\n                <h1>Invoice {{booking.ID}}</h1>              \r\n            </div>\r\n            <div class=\"invoice\">\r\n                <h5>\r\n                    Total Amount : {{totalAmount}} INR\r\n                </h5>\r\n                <h5>\r\n                    Total Nights : {{totalNights}} Nights\r\n                </h5>\r\n                <p>\r\n                    CheckIn Date: {{booking.CheckInDate}}\r\n                </p>\r\n                <p>\r\n                    CheckOut Date: {{booking.CheckOutDate}}\r\n                </p>\r\n                <p>\r\n                    Billing Address: {{booking.BillingAddress}}\r\n                </p>\r\n                <p>\r\n                    State : {{booking.State}}\r\n                </p>\r\n                <p>\r\n                    Country : {{booking.Country}}\r\n                </p>\r\n                <p>\r\n                    ZipCode : {{booking.ZipCode}}\r\n                </p>\r\n                <p>\r\n                    PhoneNumber : {{booking.PhoneNumber}}\r\n                </p>\r\n            </div>\r\n            <div class=\"btn-div\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"checkDates()\" (click)=\"onUpdateClick()\">Edit Booking</button>\r\n                <button type=\"submit\" class=\"btn btn-danger ml-2\" [disabled]=\"checkDates()\" (click)=\"onCancelClick()\">Cancel Booking</button>\r\n                \r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <ul class=\"list-inline rating-list\" \r\n                        *ngFor=\"let star of stars\" style=\"display: inline-block\" >\r\n                          <li (click)=\"countStar(star)\"\r\n                              [ngClass]=\"{'selected': (star == selectedValue)}\">\r\n                            <i class=\"fa fa-star\"></i>\r\n                          </li> \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        <div class=\"tm-recommended-price-box\">\r\n            <!-- <div class=\"camp-header\">\r\n                <h2>{{camp.CampName}}</h2>\r\n            </div> -->\r\n            <div >\r\n                <img src=\"/assets/CampImages/{{booking.Camp.Image}}\" id=\"camp-image\">\r\n            </div>\r\n            <div class=\"\">\r\n                <div class=\"camp-details\">\r\n                    <h3 class=\"tm-recommended-title\">{{booking.Camp.CampName}}</h3>\r\n                    <p class=\"tm-text-highlight\">Max Capacity: {{booking.Camp.MaxCapacity}}</p>\r\n                    <p class=\"tm-text-highlight\">Rate per Night: {{booking.Camp.RatePerNight}}</p>\r\n                    <p class=\"tm-text-gray\">\r\n                        {{booking.Camp.Description}}\r\n                    </p>   \r\n                </div> \r\n            </div>\r\n\r\n        </div>                        \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CampService } from '../services/camp.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector : 'app-camp-new',\r\n    templateUrl : './camp-new.component.html',\r\n    styleUrls : ['./camp-new.component.css']\r\n})\r\nexport class CampNewComponent implements OnInit{\r\n    campForm: FormGroup;\r\n    campName: FormControl;\r\n    ratePerNight: FormControl;\r\n    maxCapacity: FormControl;\r\n    desc: FormControl;\r\n    imageToUpload: File;\r\n    imageUrl: string;\r\n\r\n    constructor(\r\n        private campService: CampService,\r\n        private router: Router\r\n    ){}\r\n\r\n    ngOnInit(): void {\r\n        this.campName = new FormControl('', [Validators.required] );\r\n        this.ratePerNight = new FormControl('', [Validators.required] );\r\n        this.maxCapacity = new FormControl('', [Validators.required] );\r\n        this.desc = new FormControl();\r\n        this.campForm = new FormGroup({\r\n            campName : this.campName,\r\n            ratePerNight : this.ratePerNight,\r\n            maxCapacity : this.maxCapacity,\r\n            desc : this.desc\r\n        });\r\n    }\r\n\r\n    async onFormSubmit()\r\n    {\r\n        (await this.campService.postNewCamp(this.campForm, this.imageToUpload))\r\n                        .subscribe(() => {\r\n                            this.router.navigateByUrl('/Camp');\r\n                        });\r\n\r\n    }\r\n    onImageUpload(image: FileList)\r\n    {\r\n        this.imageToUpload = image.item(0);\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (event: any) => {\r\n            this.imageUrl = event.target.result;\r\n            };\r\n        reader.readAsDataURL(this.imageToUpload);\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"tm-recommended-place\" >\r\n        <div class=\"tm-recommended-description-box\">\r\n            <form class=\"needs-validation\" novalidate [formGroup]=\"campForm\" (ngSubmit)=\"onFormSubmit()\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label for=\"CampName\">Camp Name:</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"CampName\" formControlName=\"campName\" required>\r\n                  <div class=\"valid-feedback\">Valid</div>\r\n                  <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"RatePerNight\">Rate Per Night:</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"RatePerNight\" formControlName=\"ratePerNight\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"MaxCapacity\">Maximum Capacity:</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"MaxCapacity\" formControlName=\"maxCapacity\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"Description\">Description:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"Description\" formControlName=\"desc\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"CampImage\">Upload Camp Image:</label>\r\n                    <input type=\"file\" class=\"form-control\" id=\"CampImage\" name=\"CampImage\" required (change)=\"onImageUpload($event.target.files)\" >\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" id=\"btn-primary\">Submit</button>\r\n\r\n              </form>\r\n        </div>\r\n        <div class=\"tm-recommended-price-box\">\r\n            <img id=\"previewImage\" [src]=\"imageUrl\" >\r\n        </div>                        \r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { CampService } from '../services/camp.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Camp } from '../models/camp.interface';\r\n\r\n@Component({\r\n    selector : 'app-camp-update',\r\n    templateUrl : './camp-update.component.html',\r\n    styleUrls : ['./camp-update.component.css']\r\n})\r\nexport class CampUpdateComponent implements OnInit{\r\n    camp: Camp;\r\n    campForm: FormGroup;\r\n    campName: FormControl;\r\n    ratePerNight: FormControl;\r\n    maxCapacity: FormControl;\r\n    desc: FormControl;\r\n    campImage: FormControl;\r\n    imageToUpload: File;\r\n    imageUrl: string;\r\n\r\n    constructor(\r\n        private campService: CampService,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ){}\r\n\r\n    async ngOnInit() {\r\n        this.campName = new FormControl('', [Validators.required] );\r\n        this.ratePerNight = new FormControl('', [Validators.required] );\r\n        this.maxCapacity = new FormControl('', [Validators.required] );\r\n        this.desc = new FormControl();\r\n        this.campImage=new FormControl();\r\n        this.campForm = new FormGroup({\r\n            campName : this.campName,\r\n            ratePerNight : this.ratePerNight,\r\n            maxCapacity : this.maxCapacity,\r\n            desc : this.desc\r\n        });\r\n\r\n        const campId = this.route.snapshot.paramMap.get('id');\r\n        (await this.campService.getCampById(campId))\r\n            .subscribe((camp: Camp) => {\r\n                this.camp = camp;\r\n               this.campForm.setValue({\r\n                    campName : this.camp.CampName,\r\n                    ratePerNight : this.camp.RatePerNight,\r\n                    maxCapacity : this.camp.MaxCapacity,\r\n                    desc : this.camp.Description\r\n                   \r\n               })\r\n        });\r\n    }\r\n\r\n    async onFormSubmit()\r\n    {\r\n        \r\n\r\n    }\r\n    onImageUpload(image: FileList)\r\n    {\r\n        this.imageToUpload = image.item(0);\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (event: any) => {\r\n            this.imageUrl = event.target.result;\r\n            };\r\n        reader.readAsDataURL(this.imageToUpload);\r\n        \r\n\r\n    }\r\n    transform(base64Image){\r\n        return 'data:image/jpeg;base64,' + base64Image;\r\n    }\r\n}","<div class=\"main-content\">\r\n    <div class=\"tm-recommended-place\" >\r\n        <div class=\"tm-recommended-description-box\">\r\n            <form class=\"needs-validation\" novalidate [formGroup]=\"campForm\" (ngSubmit)=\"onFormSubmit()\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label for=\"CampName\">Camp Name:</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"CampName\" formControlName=\"campName\" required>\r\n                  <div class=\"valid-feedback\">Valid</div>\r\n                  <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"RatePerNight\">Rate Per Night:</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"RatePerNight\" formControlName=\"ratePerNight\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"MaxCapacity\">Maximum Capacity:</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"MaxCapacity\" formControlName=\"maxCapacity\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"Description\">Description:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"Description\" formControlName=\"desc\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"CampImage\">Upload Camp Image:</label>\r\n                    <input type=\"file\" class=\"form-control\" id=\"CampImage\" formControlName=\"campImage\" required (change)=\"onImageUpload($event.target.files)\" >\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" id=\"btn-primary\">Update Camp</button>\r\n                <button type=\"submit\" class=\"btn btn-danger ml-2\" id=\"btn-primary\">Delete Camp</button>\r\n\r\n              </form>\r\n        </div>\r\n        <div class=\"tm-recommended-price-box\">\r\n            <img id=\"previewImage\"  [src]=\"transform(camp.ImageFile)\" *ngIf=\"imageUrl ==null\" >\r\n            <img id=\"previewImage\"  [src]=\"imageUrl\" *ngIf=\"imageUrl !=null\">\r\n        </div>                        \r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, Router, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CampsComponent } from './camps/camps.component';\r\nimport { CampNewComponent } from './camp-new/camp-new.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/signup/signup.component';\r\nimport { LogInComponent } from './user/login/login.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { CampBookComponent } from './camp-book/camp-book.component';\r\nimport { CampInvoiceComponent } from './camp-invoice/camp-invoice.component';\r\nimport { BookingsManageComponent } from './bookings-manage/bookings-manage.component';\r\nimport { CampsManageComponent } from './camps-manage/camps-manage.component';\r\nimport { CampUpdateComponent } from './camp-update/camp-update.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'Home',\r\n    component: HomeComponent,\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  { path: 'Camps', component: CampsComponent },\r\n  {path: 'NewCamp' , component: CampNewComponent , canActivate:[AuthGuard] },\r\n  {path: 'ManageCamps' , component: CampsManageComponent , canActivate:[AuthGuard] },\r\n  {\r\n    path: 'SignUp', component: UserComponent,\r\n    children: [{ path: '', component: SignUpComponent }]\r\n  },\r\n  {\r\n    path: 'LogIn', component: UserComponent,\r\n    children: [{ path: '', component: LogInComponent }]\r\n  },\r\n  {\r\n    path: 'Camps/:id', component: CampBookComponent\r\n  },\r\n  {\r\n    path: 'Camps/Invoice/:bookingId' , component: CampInvoiceComponent\r\n  },\r\n  {\r\n    path: 'ManageBookings' , component: BookingsManageComponent\r\n  },\r\n  {\r\n    path: 'ManageBookings/UpdateCamp/:id' , component: CampUpdateComponent\r\n  },\r\n  { path: '**', redirectTo: '/Home', pathMatch: 'full' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forRoot(routes,\r\n      {\r\n        onSameUrlNavigation: 'reload'\r\n      })\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class CampBookingRoutingModule {\r\n\r\n}\r\n","import { NgModule , CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CampBookingComponent } from './containers/campbooking.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport { CampsComponent } from './camps/camps.component';\r\nimport { CampBookingRoutingModule } from './campbooking-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { CampService } from './services/camp.service';\r\nimport { CampNewComponent } from './camp-new/camp-new.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BookingService } from './services/booking.service';\r\nimport { UserComponent } from './user/user.component';\r\nimport { LogInComponent } from './user/login/login.component';\r\nimport { SignUpComponent } from './user/signup/signup.component';\r\nimport { UserService } from './services/user.service';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { DataService } from './services/data.service';\r\nimport {CampInvoiceComponent } from './camp-invoice/camp-invoice.component';\r\nimport { CampBookComponent } from './camp-book/camp-book.component';\r\nimport { BookingsManageComponent } from './bookings-manage/bookings-manage.component';\r\nimport { CampsManageComponent } from './camps-manage/camps-manage.component';\r\nimport { CampUpdateComponent } from './camp-update/camp-update.component';\r\nimport { BookingUpdateComponent } from './booking-update/booking-update.component';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { StarRatingComponent } from './star-rating/star-rating.component';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CampBookingComponent,\r\n        HomeComponent,\r\n        CampsComponent,\r\n        CampNewComponent,\r\n        UserComponent,\r\n        LogInComponent,\r\n        SignUpComponent,\r\n        CampBookComponent,\r\n        CampInvoiceComponent,\r\n        BookingsManageComponent,\r\n        CampsManageComponent,\r\n        CampUpdateComponent,\r\n        BookingUpdateComponent,\r\n        StarRatingComponent\r\n\r\n    ],\r\n    imports : [\r\n        CampBookingRoutingModule,\r\n        HttpClientModule,\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        MatSnackBarModule,\r\n        MatTooltipModule,\r\n        MatButtonModule,\r\n        MatIconModule\r\n    ],\r\n    providers: [\r\n        CampService,\r\n        BookingService,\r\n        UserService,\r\n        AuthGuard,\r\n        DataService,\r\n        DatePipe\r\n\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ],\r\n    exports : [\r\n        CampBookingComponent\r\n\r\n    ]\r\n})\r\nexport class CampBookingModule{\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CampService } from '../services/camp.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\nimport { Camp } from '../models/camp.interface';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector : 'app-camps-manage',\r\n    templateUrl : './camps-manage.component.html',\r\n    styleUrls : ['./camps-manage.component.css']\r\n})\r\nexport class CampsManageComponent implements OnInit{\r\n    camps: Camp[];\r\n    constructor(\r\n        private campService: CampService,\r\n        private router: Router,\r\n        private data: DataService,\r\n        private sanitizer:DomSanitizer\r\n\r\n    ){\r\n        this.getAllCamps();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getAllCamps();\r\n    }\r\n    async getAllCamps()\r\n    {\r\n        (await this.campService.getAllCamps())\r\n            .subscribe((camps: Camp[]) => {\r\n                this.camps = camps;\r\n        });\r\n        console.log(this.camps);\r\n    }\r\n    onUpdateClick(camp:Camp)\r\n    {\r\n        this.router.navigate(['ManageBookings/UpdateCamp',camp.ID]);\r\n\r\n\r\n    }\r\n    transform(base64Image){\r\n        return 'data:image/jpeg;base64,' + base64Image;\r\n    }\r\n    \r\n}","<div class=\"container-fluid\">\r\n    <div class=\"tm-recommended-place-wrap\">\r\n        <div class=\"tm-recommended-place\" *ngFor=\"let camp of camps\">\r\n            <img [src]=\"transform(camp.ImageFile)\" alt=\"Image\" class=\"img-fluid tm-recommended-img\">\r\n            <div class=\"tm-recommended-description-box\">\r\n                <h3 class=\"tm-recommended-title\">{{camp.CampName}}</h3>\r\n                <p class=\"tm-text-highlight\">{{camp.MaxCapacity}}</p>\r\n                <p class=\"tm-text-gray\">{{camp.Description}}</p>   \r\n            </div>\r\n            <div>\r\n                <a class=\"tm-recommended-price-box\" (click)=\"onUpdateClick(camp)\">\r\n                   <!-- <p class=\"tm-recommended-price\">INR {{camp.RatePerNight}}</p> -->\r\n                    <p class=\"tm-recommended-price\">Update Camp &raquo;</p>\r\n                </a> \r\n               \r\n            </div>                       \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Camp } from '../models/camp.interface';\r\nimport { CampService } from '../services/camp.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { CampFilter } from '../models/campFilter.interface';\r\nimport { DataService } from '../services/data.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { DatePipe } from '@angular/common';\r\nimport { $ } from 'protractor';\r\n\r\n@Component({\r\n    selector : 'app-camps',\r\n    templateUrl : './camps.component.html',\r\n    styleUrls : ['./camps.component.css']\r\n})\r\nexport class CampsComponent implements OnInit{\r\n    camps: Camp[];\r\n    filterCampsForm: FormGroup;\r\n    checkInControl: FormControl;\r\n    checkOutControl: FormControl;\r\n    capacityControl: FormControl;\r\n    campFilter: CampFilter;   \r\n\r\n    constructor(\r\n        private campService: CampService,\r\n        private router: Router,\r\n        private data: DataService,\r\n        private datePipe: DatePipe\r\n    ){\r\n        this.getAllCamps();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.checkInControl = new FormControl();\r\n        this.checkOutControl = new FormControl();\r\n        this.capacityControl = new FormControl();\r\n        this.filterCampsForm = new FormGroup({\r\n            checkIn: this.checkInControl,\r\n            checkOut: this.checkOutControl,\r\n            capacity: this.capacityControl\r\n        });\r\n        this.getAllCamps();\r\n        this.getToday();\r\n        this.getTomorrow();\r\n\r\n    }\r\n    async filterCamps()\r\n    {\r\n        const{checkIn, checkOut, capacity} = this.filterCampsForm.value;\r\n        (await this.campService.getAllFilteredCamps(checkIn, checkOut, capacity))\r\n                   .subscribe((camps: Camp[]) => {\r\n                       this.camps = camps;\r\n        });\r\n    }\r\n    async getAllCamps()\r\n    {\r\n        (await this.campService.getAllCamps())\r\n            .subscribe((camps: Camp[]) => {\r\n                this.camps = camps;\r\n        });\r\n        console.log(this.camps);\r\n    }\r\n    onBooking(camp: Camp)\r\n    {\r\n        this.campFilter = {\r\n            CheckInDate: this.filterCampsForm.get('checkIn').value,\r\n            CheckOutDate: this.filterCampsForm.get('checkOut').value,\r\n            Capacity: this.filterCampsForm.get('capacity').value\r\n\r\n        };\r\n        this.router.navigate(['Camps', camp.ID]);\r\n\r\n        this.data.set(this.campFilter);\r\n\r\n\r\n    }\r\n    transform(base64Image){\r\n        return 'data:image/jpeg;base64,' + base64Image;\r\n    }\r\n    getToday()\r\n    {\r\n        const d = new Date();\r\n        console.log(d.getDate());\r\n        return this.datePipe.transform(d,'dd-MM-yyyy');\r\n    }\r\n    getTomorrow()\r\n    {\r\n        let d = new Date();\r\n        d.setDate(d.getDate() + 1);\r\n        d.getDate();\r\n        return this.datePipe.transform(d, 'dd-MM-yyyy');\r\n\r\n    }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3\" id=\"filterForm-div\">\r\n            <div class=\"filterForm-header\">\r\n                <h3>Search</h3>\r\n            </div>\r\n            <form class=\"needs-validation\" novalidate [formGroup]=\"filterCampsForm\" (ngSubmit)=\"filterCamps()\">\r\n                <div class=\"form-row\">\r\n                    <label for=\"checkIn\"><h6>Check-In :</h6></label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"checkIn\" formControlName=\"checkIn\" [value]=\"getToday()\">\r\n                    <div class=\"valid-feedback\" >\r\n                    Valid.\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" >\r\n                    This field is required\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row\">\r\n                    <label for=\"checkOut\"><h6>Check-Out :</h6></label>\r\n                    <input type=\"date\" class=\"form-control\" id=\"checkOut\" formControlName=\"checkOut\" [value]=\"getTomorrow()\">\r\n                    <div class=\"valid-feedback\" >\r\n                    Valid.\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" >\r\n                    This field is required\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-row\">\r\n                    <label for=\"text\"><h6>Capacity :</h6></label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"text\" formControlName=\"capacity\">\r\n                    <div class=\"valid-feedback\" >\r\n                    Looks good!\r\n                    </div>\r\n                    <div class=\"invalid-feedback\" >\r\n                    This field is required\r\n                    </div>\r\n                </div>            \r\n            <button class=\"btn btn-primary\" id=\"btn-primary\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n        <div class=\"col-md-9\">\r\n            <div class=\"tm-recommended-place-wrap\">\r\n                <div class=\"tm-recommended-place\" *ngFor=\"let camp of camps\">\r\n                    <img [src]= \"transform(camp.ImageFile)\" alt=\"Image\" class=\"img-fluid tm-recommended-img\">\r\n                    <div class=\"tm-recommended-description-box\">\r\n                        <h3 class=\"tm-recommended-title\">{{camp.CampName}}</h3>\r\n                        <p class=\"tm-text-highlight\">{{camp.MaxCapacity}}</p>\r\n                        <p class=\"tm-text-gray\">{{camp.Description}}</p>   \r\n                    </div>\r\n                    <a class=\"tm-recommended-price-box\" (click)=\"onBooking(camp)\">\r\n                        <p class=\"tm-recommended-price\">INR {{camp.RatePerNight}}</p>\r\n                        <p class=\"tm-recommended-price-link\">Book Now</p>\r\n                    </a>                        \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { User } from '../models/user.interface';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n    selector : 'app-campbooking',\r\n    templateUrl : './campbooking.component.html',\r\n    styleUrls : ['./campbooking.component.css']\r\n})\r\nexport class CampBookingComponent implements OnInit{\r\n    userToken:boolean;\r\n    userClaims: User;\r\n    IsAdmin:false;\r\n\r\n    navigationSubscription;\r\n    constructor(\r\n        private router: Router\r\n    )\r\n    {\r\n        this.navigationSubscription = this.router.events\r\n            .subscribe((e: any) => {\r\n            if (e instanceof NavigationEnd) {\r\n                this.userToken = localStorage.getItem('userToken') !== null;\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n    \r\n    async ngOnInit(){\r\n        this.userToken = localStorage.getItem('userToken') !== null;\r\n        \r\n    }\r\n    \r\n    onLogOut()\r\n    {\r\n\r\n        localStorage.removeItem('userToken');\r\n    }\r\n\r\n}\r\n","<div class=\"tm-top-bar-bg\"></div>    \r\n<div class=\"tm-top-bar\" id=\"tm-top-bar\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row nav-row\">\r\n            <nav class=\"navbar navbar-expand-lg \" id=\"tm-navbar\">\r\n                <a class=\"navbar-brand \" routerLink=\"/home\">\r\n                    <img src=\"assets/Images/logo.png\" alt=\"Site logo\">\r\n                    Journey\r\n                </a>\r\n                <div id=\"mainNav\" class=\"collapse navbar-collapse tm-bg-white\">\r\n                    <ul class=\"navbar-nav ml-auto\">\r\n                        <li class=\"nav-item\">\r\n                        <a class=\"nav-link active\" routerLink=\"/Home\">Home </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" >\r\n                        <a class=\"nav-link\" routerLink=\"/Camps\">Recommended Places</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\" !userToken\">\r\n                        <a class=\"nav-link\" routerLink=\"/ManageBookings\">Manage Bookings</a>\r\n                    </li>\r\n                    <li class=\"nav-item dropdown\" *ngIf=\" userToken\">\r\n                        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Manage Camps</a>\r\n                        <div class=\"dropdown-menu\">\r\n                          <a class=\"dropdown-item\" routerLink=\"/NewCamp\">Add new camp</a>\r\n                          <a class=\"dropdown-item\" routerLink=\"/ManageCamps\">Manage existing camps</a>\r\n                        </div>\r\n                    </li>\r\n                   \r\n                    <li class=\"nav-item\" *ngIf=\"userToken\">\r\n                        <a class=\"nav-link\" routerLink=\"/Home\" (click)=\"onLogOut()\">LogOut ${{userToken}}</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"!userToken\">\r\n                        <a class=\"nav-link\" routerLink=\"/LogIn\">LogIn</a>\r\n                    </li>\r\n                </ul>\r\n            </div>                            \r\n        </nav>\r\n        </div>  \r\n    </div> <!-- container -->\r\n</div>\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\n@Component({\r\n    selector : 'app-home',\r\n    templateUrl : './home.component.html',\r\n    styleUrls : ['./home.component.css']\r\n})\r\nexport class HomeComponent{\r\n    \r\n\r\n}\r\n","<div class=\"tm-page-wrap mx-auto\">\r\n    <section class=\"tm-banner\">\r\n        <div class=\"tm-container-outer tm-banner-bg\">\r\n            <div class=\"container\">\r\n                <div class=\"row tm-banner-row tm-banner-row-header\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"tm-banner-header\">\r\n                            <h1 class=\"text-uppercase tm-banner-title\">Let's begin</h1>\r\n                            <img src=\"assets/Images/dots-3.png\" alt=\"Dots\">\r\n                            <p class=\"tm-banner-subtitle\">We assist you to choose the best.</p>                            \r\n                        </div>    \r\n                    </div>  <!-- col-xs-12 -->                      \r\n                </div> <!-- row -->\r\n                <div class=\"row tm-banner-row\" id=\"tm-section-search\">\r\n                    <section class=\"p-5 tm-container-outer tm-bg-gray\">            \r\n                        <div class=\"container\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-12 mx-auto tm-about-text-wrap text-center\">                        \r\n                                    <h2 class=\"text-uppercase mb-4\">Your <strong>Journey</strong> is our priority</h2>\r\n                                    <p class=\"mb-4\">Nullam auctor, sapien sit amet lacinia euismod, lorem magna lobortis massa, in tincidunt mi metus quis lectus. Duis nec lobortis velit. Vivamus id magna vulputate, tempor ante eget, tempus augue. Maecenas ultricies neque magna.</p>\r\n                                    <a routerLink=\"/Camp\" class=\"text-uppercase btn-primary tm-btn\">Continue explore</a>                              \r\n                                </div>\r\n                            </div>\r\n                        </div>            \r\n                    </section>                   \r\n                </div> <!-- row -->\r\n                <div class=\"tm-banner-overlay\"></div>\r\n            </div>  <!-- .container -->                   \r\n        </div>     <!-- .tm-container-outer -->                 \r\n    </section>    \r\n</div>\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Booking } from '../models/booking.interface';\r\n\r\n@Injectable()\r\nexport class BookingService{\r\n    url = 'http://localhost:53056/api/Booking';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    async postBooking(booking:Booking)\r\n    {\r\n        return this.http.post(this.url,booking);\r\n    }\r\n    async getBookingById(bookingId:string)\r\n    {                           \r\n        return this.http.get<Booking>(this.url+`/${bookingId}`);\r\n    }\r\n    async deleteBookingById(bookingId:string)\r\n    {\r\n        return this.http.delete(this.url+`${bookingId}`);\r\n    }\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Camp} from '../models/camp.interface';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class CampService{\r\n  url = 'http://localhost:53056/api/Camp';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  async getAllFilteredCamps(checkIn: Date , checkOut: Date , capacity: number)\r\n  {\r\n    const params = new HttpParams().set('checkIn', checkIn.toString())\r\n                                   .set('checkOut', checkOut.toString())\r\n                                   .set('capacity', capacity.toString());\r\n\r\n\r\n    return this.http.get<Camp[]>(this.url, {params});\r\n\r\n  }\r\n  async postNewCamp(campForm: FormGroup , imageToUpload: File)\r\n  {\r\n    const formData: FormData = new FormData();\r\n    Object.entries(campForm.value).forEach(\r\n      ([key, value]: any[]) => {\r\n        formData.set(key, value);\r\n      }\r\n    );\r\n    formData.append('image', imageToUpload, imageToUpload.name);\r\n    return this.http.post(this.url, formData);\r\n  }\r\n  async getAllCamps()\r\n  {\r\n    return this.http.get<Camp[]>(this.url);\r\n  }\r\n\r\n  async getCampById(campId)\r\n  {\r\n    return this.http.get<Camp>(this.url + `/${campId}`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CampFilter } from '../models/campFilter.interface';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  campFilter: CampFilter;\r\n\r\n  constructor() { }\r\n\r\n  set(campFilter: CampFilter) {\r\n    this.campFilter = campFilter;\r\n  }\r\n  get(){\r\n      return this.campFilter;\r\n  }\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class UserService{\r\n\r\n    url = 'http://localhost:53056';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    async userAuthentication(email, password)\r\n    {\r\n        console.log(email , password);\r\n        const data = 'email=' + email + '&password=' + password + '&grant_type=password';\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/x-www-urlencoded',\r\n            'No-Auth': 'True'\r\n        });\r\n        return this.http.post(this.url + '/token', data , {headers});\r\n\r\n    }\r\n    async getUserClaims()\r\n    {\r\n        return this.http.get(this.url+'api/GetUserClaims',\r\n        {headers: new HttpHeaders({\r\n            'Authorization':'Bearer '+localStorage.getItem('userToken')\r\n        })});\r\n    }\r\n}","import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Component({\r\n  selector: 'mat-star-rating',\r\n  templateUrl: './star-rating.component.html',\r\n  styleUrls: ['./star-rating.component.css'],\r\n  encapsulation: ViewEncapsulation.Emulated\r\n})\r\nexport class StarRatingComponent implements OnInit {\r\n\r\n  @Input('rating') rating: number;\r\n  @Input('starCount') starCount: number;\r\n  @Input('color') color: string;\r\n  @Output() ratingUpdated = new EventEmitter();\r\n\r\n  snackBarDuration: number = 2000;\r\n  ratingArr = [];\r\n\r\n  constructor(private snackBar: MatSnackBar) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    for (let index = 0; index < this.starCount; index++) {\r\n      this.ratingArr.push(index);\r\n    }\r\n  }\r\n  onClick(rating:number) {\r\n    console.log(rating)\r\n    this.snackBar.open('You rated ' + rating + ' / ' + this.starCount, '', {\r\n      duration: this.snackBarDuration\r\n    });\r\n    this.ratingUpdated.emit(rating);\r\n    return false;\r\n  }\r\n\r\n  showIcon(index:number) {\r\n    if (this.rating >= index + 1) {\r\n      return 'star';\r\n    } else {\r\n      return 'star_border';\r\n    }\r\n  }\r\n\r\n}\r\nexport enum StarRatingColor {\r\n  primary = \"primary\",\r\n  accent = \"accent\",\r\n  warn = \"warn\"\r\n}","<button mat-icon-button [color]=\"color\" *ngFor=\"let ratingId of ratingArr;index as i\" [id]=\"'star_'+i\" (click)=\"onClick(i+1)\" [matTooltip]=\"ratingId+1\" matTooltipPosition=\"above\">\r\n    <mat-icon>\r\n      {{showIcon(i)}}\r\n    </mat-icon>\r\n  </button>\r\n  <mat-error *ngIf=\"starCount == null || starCount == 0\">\r\n    Star count is <strong>required</strong> and cannot be zero\r\n  </mat-error>","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { UserService } from '../../services/user.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector : 'app-login',\r\n    templateUrl : './login.component.html',\r\n    styleUrls : ['./login.component.css']\r\n})\r\nexport class LogInComponent{\r\n    logInForm: FormGroup;\r\n    userEmail: FormControl;\r\n    password: FormControl;\r\n    isLoginError = false;\r\n\r\n    constructor(\r\n       private userService: UserService,\r\n       private router: Router){}\r\n\r\n    // tslint:disable-next-line: use-lifecycle-interface\r\n    ngOnInit(): void {\r\n        this.userEmail = new FormControl();\r\n        this.password = new FormControl();\r\n    \r\n        this.logInForm = new FormGroup({\r\n            userEmail: this.userEmail,\r\n            password: this.password\r\n        });\r\n    }\r\n\r\n    async onFormSubmit()\r\n    {\r\n        // tslint:disable-next-line: max-line-length\r\n        (await this.userService.userAuthentication(this.logInForm.get('userEmail').value, this.logInForm.get('password').value)).subscribe((data : any) => {\r\n            localStorage.setItem('userToken' , data.access_token);\r\n            this.router.navigate(['/Home']);\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n            this.isLoginError = true;\r\n\r\n        });\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"isLoginError\" class=\"red-text center error-message\">\r\n    <i class=\"material-icons\">error</i> Incorrect email or password\r\n</div>\r\n<div class=\"main-content\">\r\n    <div class=\"tm-recommended-place\" >\r\n        <div class=\"tm-recommended-description-box\">\r\n            <form class=\"needs-validation\" novalidate [formGroup]='logInForm' (ngSubmit)=\"onFormSubmit()\">\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"userEmail\">Email:</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"userEmail\" formControlName=\"userEmail\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                  </div>\r\n\r\n                  <div class=\"form-group\">\r\n                    <label for=\"password\">Password:</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" id=\"btn-primary\">Log-In</button>\r\n\r\n              </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector : 'app-signup',\r\n    templateUrl : './signup.component.html',\r\n    styleUrls : ['./signup.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit{\r\n    \r\n    signUpForm: FormGroup;\r\n    userEmail: FormControl;\r\n    fullName: FormControl;\r\n    password: FormControl;\r\n\r\n    ngOnInit(): void {\r\n        this.userEmail = new FormControl();\r\n        this.password = new FormControl();\r\n        this.fullName = new FormControl();\r\n        this.signUpForm = new FormGroup({\r\n            userEmail: this.userEmail,\r\n            fullName: this.fullName,\r\n            password: this.password\r\n        });\r\n    }\r\n\r\n    onFormSubmit()\r\n    {\r\n\r\n    }\r\n\r\n\r\n\r\n}","<div class=\"main-content\">\r\n    <div class=\"tm-recommended-place\" >\r\n        <div class=\"tm-recommended-description-box\">\r\n            <form class=\"needs-validation\" novalidate [formGroup]=\"signUpForm\" (ngSubmit)=\"onFormSubmit()\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label for=\"userEmail\">Email:</label>\r\n                  <input type=\"email\" class=\"form-control\" id=\"userEmail\" formControlName=\"userEmail\" required>\r\n                  <div class=\"valid-feedback\">Valid</div>\r\n                  <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"fullName\">FullName:</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"fullName\" formControlName=\"fullName\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password:</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" required>\r\n                    <div class=\"valid-feedback\">Valid</div>\r\n                    <div class=\"invalid-feedback\">Please fill out this field.</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" id=\"btn-primary\">Sign-Up</button>\r\n\r\n              </form>\r\n        </div>\r\n        <!-- <div class=\"tm-recommended-price-box\">\r\n        </div>                         -->\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-user',\r\n    templateUrl : './user.component.html',\r\n    styleUrls : ['./user.component.css']\r\n})\r\nexport class UserComponent{\r\n    \r\n\r\n}","<div class=\"container\" id=\"user-container\">\r\n    <div class=\"card \">\r\n        <div class=\"card-header\" >\r\n          <ul class=\"nav nav-tabs card-header-tabs\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link \" routerLink='/LogIn' routerLinkActive='active'>LogIn</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink='/SignUp' routerLinkActive='active'>SignUp</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}